apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pleroma
  name: pleroma
  namespace: pleroma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pleroma
  template:
    metadata:
      labels:
        app: pleroma
    spec:
      securityContext:
        fsGroup: 911
      containers:
        - image: ghcr.io/chroju/docker-pleroma:v2.7.0
          imagePullPolicy: Always
          name: pleroma
          # command: ["/bin/sh"]
          # args: ["-c", "while ! pg_isready -U ${DB_USER:-pleroma} -d postgres://${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME:-pleroma} -t 1; do sleep 1s; done &&  $HOME/bin/pleroma_ctl database vacuum analyze && /pleroma/docker-entrypoint.sh"]
          # livenessProbe:
          #   httpGet:
          #     path: /ready
          #     port: 2000
          #   failureThreshold: 1
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          securityContext:
            runAsGroup: 911
            runAsUser: 911
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 200Mi
          ports:
            - containerPort: 4000
          env:
            - name: DOMAIN
              value: pleroma.chroju.dev
            - name: INSTANCE_NAME
              value: pleroma
            - name: ADMIN_EMAIL
              value: chor.chroju@gmail.com
            - name: NOTIFY_EMAIL
              value: chor.chroju@gmail.com
            - name: DB_HOST
              value: localhost
            - name: DB_NAME
              value: pleroma
            - name: DB_USER
              value: pleroma
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: pleroma-secrets
                  key: pleroma-db-password
          volumeMounts:
            - mountPath: /var/lib/pleroma
              name: pleroma-pv
            - mountPath: /etc/pleroma/config.exs
              subPath: config.exs
              name: pleroma-config-volume
            # - mountPath: /etc/pleroma
            #   name: pleroma-config-volume
        - image: public.ecr.aws/docker/library/postgres:alpine3.18
          name: db
          # livenessProbe:
          #   httpGet:
          #     path: /ready
          #     port: 2000
          #   failureThreshold: 1
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          args: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
            limits:
              cpu: 200m
              memory: 500Mi
          env:
            - name: POSTGRES_DB
              value: pleroma
            - name: POSTGRES_USER
              value: pleroma
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pleroma-secrets
                  key: pleroma-db-password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pleroma-data-pv
            - mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
              name: postgres-config-volume
      volumes:
        - name: pleroma-pv
          persistentVolumeClaim:
            claimName: pleroma-pvc
        - name: pleroma-data-pv
          persistentVolumeClaim:
            claimName: pleroma-data-pvc
        - name: pleroma-config-volume
          configMap:
            name: pleroma-config
            items:
            - key: pleroma.exs
              path: config.exs
              mode: 0440
        - name: postgres-config-volume
          configMap:
            name: postgres-config
            items:
            - key: postgresql.conf
              path: postgresql.conf
              mode: 0444
